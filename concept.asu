%Animal 1.4
title "Multicriterial Dijkstra"
author "Tim Witzel, Jonas Schlitzer"

{
codeGroup "listSource" at (600, 50) color black highlightColor red
addCodeLine "Input: A timetable graph and a query" to "listSource"
addCodeLine "Output: a set of advanced pareto optimal labels at the terminal" to "listSource"
addCodeLine "" to "listSource"
addCodeLine "PriorityQueue pq := {};" to "listSource"
addCodeLine "createStartLabels();" to "listSource"
addCodeLine "while !pq.isEmpty() do" to "listSource"
addCodeLine "	Label label := pq.extractLabel();" to "listSource"
addCodeLine "	foreach outgoing edge e=(v,w) do" to "listSource"
addCodeLine "		Label newLabel := createLabel(label, e);" to "listSource"
addCodeLine "		if isDominated(newLabel) then continue;" to "listSource"
addCodeLine "		if isTerminalReached(newLabel) then" to "listSource"
addCodeLine "			terminalList.insert(newLabel);" to "listSource"
addCodeLine "		else" to "listSource"
addCodeLine "			labelListAt(w).insert(newLabel);" to "listSource"
addCodeLine "			labelList(w).removeLabelDominatedBy(newLabel);" to "listSource"
addCodeLine "			pq.insert(newLabel)" to "listSource"
addCodeLine "filterList(terminalList);" to "listSource"

graph "graph" size 4 bgcolor light Gray outlineColor black highlightColor green2  nodeFontColor black edgeFontColor black directed weighted nodes { "Start" (200, 100), "A" (50,250), "B" (350,250), "Goal" (200, 400)} edges {(0,1, "{10,1} "), (0,2, "{15,0}"), (1,3, "{30,1}") (2,3, "{20, 3} ")}
highlightNode on "graph" nodes 0
highlightEdge on "graph" (0,1)
}



